# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'my.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.




class Ui_mainWindow(object):
    def setupUi(self, mainWindow):
        mainWindow.setObjectName("mainWindow")
        mainWindow.resize(853, 547)
        font = QtGui.QFont()
        font.setFamily("华文楷体")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        mainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(280, 220, 111, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton.setFont(font)
        self.pushButton.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(460, 220, 71, 31))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(280, 80, 351, 31))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(710, 480, 141, 41))
        font = QtGui.QFont()
        font.setFamily("宋体")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")

        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "Monkey_log Static Tools"))
        self.pushButton.setText(_translate("mainWindow", "选择monkey文件"))
        self.pushButton_2.setText(_translate("mainWindow", "确认导入"))
        self.label.setText(_translate("mainWindow", "欢迎使用Monkey_log整理工具"))
        self.label_2.setText(_translate("mainWindow", "email:gaoxi2019@163.com"))

import os,sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from read_log3 import StaticMonkeyLog,CollectDdetail
from openpyxl import Workbook



class Static_MonkeyLog(QWidget, Ui_mainWindow):
    def __init__(self):
        super(Static_MonkeyLog, self).__init__()
        self.setupUi(self)
        self.file_path = None

    def openfile(self):
        openfile_name = QFileDialog.getOpenFileName(self, '选择文件', '', 'txt files(*.txt)')
        path = openfile_name[0]
        self.file_path = path.replace(r"/", "\\")

    def start(self):
        if os.listdir(r"monkey_log/"):
            os.system(r"del /Q /S monkey_log\*")
        os.system(rf"copy {self.file_path} monkey_log\monkeylog.txt")
        if os.listdir(r"excel/"):
            os.system(r"del /Q /S excel\*")
        self.execute()
        print("整理完毕")

    def execute(self):
        wb = Workbook()
        wb.save(r"excel/monkey_result.xlsx")

        sml = StaticMonkeyLog()
        packages_list = sml.read_package_to_list(r"monkey_log/monkeylog.txt", "CRASH  (com\S*)")  ###前面代码中：和，已经替换成空格
        my_list = sml.make_needinfo(packages_list)
        sml.write_to_excel(my_list, "crash_sum")

        sml2 = StaticMonkeyLog()
        packages_list = sml2.read_package_to_list(r"monkey_log/monkeylog.txt", "ANR in (\S*)")
        my_list = sml2.make_needinfo(packages_list)
        sml2.write_to_excel(my_list, "ANR_sum")

        cd = CollectDdetail()
        cd.make_detail(file_path=r"monkey_log/monkeylog.txt", re_express="CRASH  (com\S*)",
                       sheet_name="crash_detail")  ###116行把：和，已经替换成空格
        cd.make_detail(file_path=r"monkey_log/monkeylog.txt", re_express="ANR in (\S*)", sheet_name="ANR_detail")
        import socket, getpass
        # computer_host_name = socket.gethostname()
        # print(computer_host_name)
        computer_user_name = getpass.getuser()
        # print(computer_user_name)
        result_path = rf"C:\Users\{computer_user_name}\Desktop"
        os.system(fr"copy excel\monkey_result.xlsx {result_path}")


if __name__ == '__main__':
    app=QApplication(sys.argv)
    w = Static_MonkeyLog()
    w.show()
    w.pushButton.clicked.connect(w.openfile)
    w.pushButton_2.clicked.connect(w.start)
    sys.exit(app.exec_())